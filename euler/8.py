raw_num = \
"731671765313306249192251196744265747423553491949349698352031277450632623957831801698480186\
9478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329\
0963295227443043557668966489504452445231617318564030987111217223831136222989342338030813533\
6276614282806444486645238749303589072962904915604407723907138105158593079608667017242712188\
3998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258\
4907711670556013604839586446706324415722155397536978179778461740649551492908625693219784686\
2248283972241375657056057490261407972968652414535100474821663704844031998900088952434506585\
4122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456\
8284891288314260769004224219022671055626321111109370544217506941658960408071984038509624554\
4436298123098787992724428490918884580156166097919133875499200524063689912560717606058861164\
6710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"

num = list() # list composed of each digits of int type raw_num
num_len = 1000 # length of the number
digit_len = 13 # length of adjacent digits
result = 0 # initialize result
i = 0 # present start index

# change it to <int>
for digits in raw_num:
    num.append(int(digits))

while i + digit_len < num_len:
    tmp_result = 1 # initialize temporary result value
    isNotZero = True # bool var. true if num[i+j] is not zero
    for j in range(0, digit_len):
        if num[i + j] != 0:
            tmp_result *= num[i + j] 
        else:  # if num[i+j] is 0
            isNotZero = False
            i += j # start the next loop after the zero. 
            break
    if isNotZero and result < tmp_result:
        result = tmp_result
    i += 1

print(result)
